import random
import unittest
import numpy as np

import cv2

from tplcpp import convex_hull


class TestConvexHull(unittest.TestCase):

    def setUp(self):

        self.points = [
            [-8.47546588, -3.22943243],
            [-1.77776743,  8.00554938],
            [ 8.45459218,  6.40369833],
            [ 2.81220821,  2.35277747],
            [-2.10281954,  9.92999478],
            [-1.12475933, -3.8823226 ],
            [ 0.65147432,  4.19730732],
            [-5.4234979 , -4.52258751],
            [-5.22880473, -9.00832502],
            [-6.84462785,  9.43115069],
            [-9.54316463, -9.25191719],
            [-3.69649665,  2.67672156],
            [-3.42341753, -4.68567193],
            [ 8.14081289,  2.66928152],
            [-9.02965136, -8.30660469],
            [ 3.63562474,  1.14295386],
            [ 1.96530468, -0.7488684 ],
            [ 8.23787586, -9.03797504],
            [ 1.41590621, -2.34056686],
            [ 6.81692706, -4.58605566],
            [ 4.91676895,  9.00441677],
            [ 2.60998838,  6.19696673],
            [-6.28462445,  2.22631545],
            [-4.25064579,  6.46598977],
            [-0.34036214,  1.70201152],
            [ 3.49902646, -9.63632356],
            [-6.78983247, -1.88715583],
            [-4.32271885, -4.14159495],
            [-4.12603425, -8.51680934],
            [ 9.09829373, -5.85894391],
            [-4.6796703 , -6.33532242],
            [ 2.64561298,  2.28831402],
            [ 2.77680919, -6.81937298],
            [-2.85473901, -0.6273935 ],
            [ 9.84635812,  3.65194348],
            [-3.74707158,  9.06169051],
            [ 3.05827299, -4.2768476 ],
            [-6.64818338,  3.09081454],
            [ 0.65970463,  1.57218791],
            [-0.52578141,  7.76052226],
            [-0.45683037,  8.73554894],
            [ 5.63975094,  3.18160639],
            [-1.09393883, -0.55103502],
            [ 4.51293158,  3.97945834],
            [-9.41924226, -5.83265481],
            [-0.79772183,  1.28861019],
            [ 1.57959983,  7.29489473],
            [-1.49072653, -1.27428748],
            [-8.66976678,  3.29442521],
            [-8.7068822 , -0.99205805]]

        self.gt_hull = [
             [9.846358, 3.6519434],
             [8.454592, 6.4036984],
             [4.916769, 9.004416],
             [-2.1028194, 9.929995],
             [-6.844628, 9.43115],
             [-8.669766, 3.2944252],
             [-9.419242, -5.832655],
             [-9.543164, -9.251917],
             [3.4990265, -9.636324],
             [8.237876, -9.037975],
             [9.098293, -5.858944]]

    def test_onePoint(self):
        
        points = np.array([[0.0, 0.0]])
        hull = convex_hull(points)

        self.assertTrue(np.allclose(hull, points))

    def test_twoPoints(self):
        
        points = np.array([[0.0, 0.0], [1.0, 0.0]])
        hull = convex_hull(points)

        self.assertTrue(np.allclose(hull, points))

    def test_threePoints(self):
        
        points = np.array([[0.0, 0.0], [1.0, 0.0], [1.0, 1.0]])
        hull = convex_hull(points)

        self.assertTrue(np.allclose(hull, points))

    def test_manyPoints(self):

        hull = convex_hull(self.points)

        for p in hull:
            found_point = False
            for o in self.gt_hull:
                if np.linalg.norm(p - o) < 10e-4:
                    found_point = True
                    break
            self.assertTrue(found_point, "Hull point not part of ground truth convex hull!")

